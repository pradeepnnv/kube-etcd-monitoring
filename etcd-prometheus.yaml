---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: etcd-prometheus
  name: etcd-prometheus
  namespace: etcd-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: etcd-prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: etcd-prometheus
    spec:
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      nodeSelector:
        kubernetes.io/role: master
      containers:
        - image: prom/prometheus
          name: prometheus
          volumeMounts:
            - name: etcd-client-cert
              mountPath: /etc/etcd-tls
            - name: prometheus-config
              mountPath: /etc/prometheus/
      volumes:
        - name: etcd-client-cert
          secret:
            secretName: etcd-client-cert
        - name: prometheus-config
          configMap:
            name: etcd-prometheus-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: etcd-prometheus
  name: etcd-prometheus-config
  namespace: etcd-monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval:     15s
      evaluation_interval: 15s
    # A scrape configuration containing exactly one endpoint to scrape:
    # Here it's Prometheus itself.
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
        - targets: ['localhost:9090']
      - job_name: 'etcd'
        scheme: https
        tls_config:
          ca_file: /etc/etcd-tls/etcd-ca
          cert_file: /etc/etcd-tls/etcd-client
          key_file: /etc/etcd-tls/etcd-client-key
          insecure_skip_verify: true
        static_configs:
        - targets: ['etcd-monitoring-svc.kube-system.svc.cluster.local:4001']
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: etcd-prometheus
  name: etcd-prometheus
  namespace: etcd-monitoring
spec:
  ports:
    - name: http
      port: 9090
  selector:
    app.kubernetes.io/name: etcd-prometheus
